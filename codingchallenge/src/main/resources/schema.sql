DROP TABLE IF EXISTS GENRES;

CREATE TABLE GENRES (
    ID INT AUTO_INCREMENT  PRIMARY KEY,
    NAME VARCHAR
);

DROP TABLE IF EXISTS ARTISTS;

CREATE TABLE artists (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR,
    GENRE VARCHAR REFERENCES GENRES(NAME)
);

DROP TABLE IF EXISTS RELATED_ARTISTS;

CREATE TABLE RELATED_ARTISTS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ARTIST_NAME VARCHAR REFERENCES ARTISTS(NAME),
    RELATED_ARTIST VARCHAR REFERENCES ARTISTS(NAME)
);

DROP TABLE IF EXISTS VENUES;

CREATE TABLE VENUES (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR,
    CITY VARCHAR,
    COUNTRY VARCHAR
);

DROP TABLE IF EXISTS TITLES;

CREATE TABLE TITLES (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    TITLE VARCHAR,
    GENRE VARCHAR REFERENCES GENRES(NAME),
    ARTIST VARCHAR REFERENCES ARTISTS(NAME),
    VENUE VARCHAR REFERENCES VENUES(NAME),
    ACTIVE VARCHAR
);

DROP TABLE IF EXISTS VIEW_COUNTS;

CREATE TABLE VIEW_COUNTS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    TITLE_ID INT REFERENCES TITLES(ID),
    VIEW_COUNT INT
);

CREATE SEQUENCE IF NOT EXISTS artists_seq start with 500 increment by 1;
SELECT artists_seq.nextval from dual;

CREATE SEQUENCE IF NOT EXISTS titles_seq start with 500 increment by 1;
SELECT titles_seq.nextval from dual;

CREATE SEQUENCE IF NOT EXISTS venues_seq start with 500 increment by 1;
SELECT venues_seq.nextval from dual;

CREATE SEQUENCE IF NOT EXISTS view_counts_seq start with 500 increment by 1;
SELECT view_counts_seq.nextval from dual;